1) How do you space list items using margin or line-height in CSS?

You can space list items in CSS using margin or line-height, depending
 on whether you want to adjust spacing between items or within them.

    i) 1. Using margin (e.g., margin-bottom)
    - Controls the space between list items.
    - Useful for adding space outside each <li> element.

    eg) li {
    margin-bottom: 40px;
    }
    This adds 40px of space below each list item.

    ii) Using line-height
    - Controls the space within each list item (between lines of text).
    - Mainly affects items with multi-line text, but can slightly influence
    spacing even with single-line items.

    eg) li {
    line-height: 2;
    }
    This sets the line height to 2x the font size,
    increasing the vertical space within each item.

2) How list-style Properties Work in CSS ?
The list-style property in CSS is a shorthand that controls how
 list items look. It's made up of three sub-properties:

 i) list-style-type – Sets the bullet or number style
    - Unordered lists (<ul>): styles like disc, circle, square
    - Ordered lists (<ol>): styles like decimal, upper-roman, lower-alpha, etc.

    eg) <ul style="list-style-type: square;">
            <li>Item 1</li>
            <li>Item 2</li>
        </ul>
    This displays square bullets

 ii) list-style-position – Controls bullet position
    - outside (default): bullet is outside the content box
    - inside: bullet is inside, causing text to align with the bullet

    eg) <ul style="list-style-position: inside;">
        <li>This item has bullets inside</li>
    </ul>

 iii)  list-style-image – Uses an image as the bullet
    eg) ul {
            list-style-image: url('bullet-icon.png');
        }
    Replaces bullets with the image bullet-icon.png

 iv) Shorthand list-style Property
    - You can combine all three in any order:
    eg) <ul style="list-style: square inside url('icon.png');">
            <li>Item 1</li>
        </ul>

3) Default Link Styles and Their Importance for Usability
- Default link styles in browsers—blue underlined for unvisited links and
    purple for visited ones—are essential for usability and accessibility on the web.

Why important?
    i) Recognizability:
    - Users instantly know what’s clickable.
    eg) a:link {
            color: blue;
            text-decoration: underline;
        }
        a:visited {
            color: purple;
        }

    ii) Usability:
    - Underlines and colors help users, including those with color blindness,
     identify links.

    iii) Navigation History:
    - Visited links change color (typically purple), helping users avoid
     revisiting the same content.

    iv) Consistency:
    - Users expect these conventions; changing them without clear
     alternatives can confuse users.

    Customization example:
    a:link {
        color: blue;
        text-decoration: none;
        border-bottom: 1px solid blue;
    }
    a:visited {
        color: purple;
        border-bottom: 1px solid purple;
    }
    a:hover {
        color: red;
    }
    a:active {
        color: darkorange;
    }

4) How do you style the different link states in CSS?

Links in CSS can exist in five key states: :link, :visited, :hover, :focus, 
and :active. These states are styled using pseudo-classes, which improve 
usability and accessibility by giving users clear, interactive feedback

Why They're Important:
- Help users recognize clickable elements.
- Show which links are visited.
- Provide immediate feedback (hover, active, focus).
- Aid users with visual or cognitive impairments.

like above u can manage them,
eg:  a:focus {
  outline: 2px solid orange;
}
a:active {
  color: pink;
}

Use all five states to create an accessible and user-friendly interface. 
Always ensure sufficient contrast and visual distinction between states.

# Order matters btw!!!!
Style link states in this recommended order to avoid unexpected behavior:

a:link → a:visited → a:hover → a:focus → a:active